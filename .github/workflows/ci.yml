name: ci-chain

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  quickcheck:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.rustversion.outputs.rustversion }}
    steps:
    - uses: actions/checkout@v2
    - run: cargo check
    - run: cargo pkgid
    - run: 'echo "$(cargo pkgid | cut -d# -f2)"'
    - id: rustversion
      run: 'echo "::set-output name=rustversion::$(cargo pkgid | cut -d# -f2)"'

  build:
    name: Build ${{ matrix.os }} ${{ matrix.target }} 
    needs: quickcheck
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu }
    steps:
    - name: Checkout source
      uses: actions/checkout@v2

    - name: GCC and Rust version overview
      shell: bash
      run: |
        gcc --version
        rustup -V
        cargo -V

    - name: Build
      run: cargo build --target=${{ matrix.target }}

    - name: Run tests
      run: cargo test --target=${{ matrix.target }}
