name: cd-chain

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*.*.*'

jobs:
  quickcheck:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.rustversion.outputs.rustversion }}
    steps:
    - uses: actions/checkout@v2
    - run: cargo check
    - run: cargo pkgid
    - run: 'echo "$(cargo pkgid | cut -d# -f2)"'
    - id: rustversion
      run: 'echo "::set-output name=rustversion::$(cargo pkgid | cut -d# -f2)"'
      
  debbuild:
    needs: [quickcheck]
    runs-on: ubuntu-latest
    name: Amd64Deb
    steps:
    - uses: actions/checkout@v2
    - name: Install cargo-deb
      run: cargo install cargo-deb
    - name: Build deb package
      run: cargo deb
      id: debbuild
    - name: Upload Deb Artifact
      uses: actions/upload-artifact@v2
      with:
        name: amd64deb
        path: ./target/debian/*

  update_release_draft:
    needs: [quickcheck, debbuild]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          draft: true
          prerelease: false
      - uses: actions/download-artifact@v2
      - run: ls -lha
      - name: Upload amd64 deb release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./amd64deb/beast_${{needs.quickcheck.outputs.version}}_amd64.deb
          asset_name: 'beast_${{needs.quickcheck.outputs.version}}_amd64.deb'
          asset_content_type: application/vnd.debian.binary-package
